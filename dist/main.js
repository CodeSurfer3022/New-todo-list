!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);const n=function(){const e=[];return{add:function(t){e.push(t),t.getProject()},remove:function(t){let o=e.findIndex(e=>e.title===t.title);e.splice(o,1)},getTodo:function(t){return e.find(e=>e.getTitle()===t.getTitle())},getList:function(){return e}}}();function r(e,t,o,r="Home"){let u=e,c=t,l=o,i=r,s=[],d=!1;return{edit:function(e,t,o,n){u=e,c=t,l=o,i=n},moveToProject:function(e){i=e},reschedule:function(e){l=e},addChecklist:function(e){s=e},markAsCompleted:function(){console.log(s);let e=s.map(e=>n.getTodo(e));console.log(e),e.every(e=>e.isCompleted)?(d=!0,console.log(`marked ${this} as completed`)):console.log("please complete all subtasks before marking the task as complete")},getTitle:function(){return u},getNotes:function(){return c},getDueDate:function(){return l},getProject:function(){return i},getCheckList:function(){return s},isCompleted:function(){return d}}}let u=r("todo1","just checkin","today","Home");n.add(u),console.log(u),console.log(n.getList()),n.getTodo(u),u.edit("todo2","checkin edit","tomorrow","default"),console.log(n.getTodo(u)),u.moveToProject("home"),u.reschedule("today");let c=[],l=r("subtask1","do subtask","today","misc");n.add(l),c.push(l),u.addChecklist(c),console.log(n.getTodo(u)),console.log("output for mark"),u.markAsCompleted(),n.remove(u),c.forEach(e=>e.markAsCompleted()),u.markAsCompleted()}]);